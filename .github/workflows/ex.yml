name: Build LLVM

on:
  workflow_dispatch:
  push:
    branches:
      - main
  # pull_request:
  #   paths:
  #     - ".github/workflows/build.yml"
  #     - "docker/**"
  #     - "build.sh"

concurrency:
  group: llvm-cuda-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_HUB_NAMESPACE: jackalcooper

jobs:
  build_img:
    name: Build ${{ matrix.LLVM_VERSION }} ${{ matrix.platform }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        platform: ["arm64", "amd64", "multi-platform"]
        LLVM_VERSION: ["14", "15"]
    env:
      DOCKER_REPO: "elixir-llvm-${{ matrix.LLVM_VERSION }}-${{ matrix.platform }}"
      DOCKER_REPO_MULTI_PLATFORM: "elixir-llvm-${{ matrix.LLVM_VERSION }}"
      BASE_IMAGE: "elixir:latest"
      LLVM_VERSION: "${{ matrix.LLVM_VERSION }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get Release Version
        run: |
          RELEASE_DATE=$(curl https://apt.llvm.org/focal/dists/llvm-toolchain-focal-14/Release | grep 'Date' )
          RELEASE_DATE=${RELEASE_DATE//[^a-zA-Z0-9_]/}
          echo "RELEASE_DATE=${RELEASE_DATE}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push (arm64)
        if: matrix.platform == 'arm64'
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ env.RELEASE_DATE }}
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
          cache-to: type=inline
          context: ./llvm-ex
          build-args: |
            BASE_IMAGE
            LLVM_VERSION
            RELEASE_DATE

      - name: Build and push (amd64)
        uses: docker/build-push-action@v3
        if: matrix.platform == 'amd64'
        with:
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ env.RELEASE_DATE }}
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO }}:latest
          cache-to: type=inline
          context: ./llvm-ex
          build-args: |
            BASE_IMAGE
            LLVM_VERSION
            RELEASE_DATE

      - name: Build and push (multi-platform)
        uses: docker/build-push-action@v3
        if: matrix.platform == 'multi-platform'
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO_MULTI_PLATFORM }}:latest
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO_MULTI_PLATFORM }}:${{ env.RELEASE_DATE }}
            ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_REPO_MULTI_PLATFORM }}:${{ github.sha }}
          context: ./llvm-ex
          build-args: |
            BASE_IMAGE
            LLVM_VERSION
            RELEASE_DATE
